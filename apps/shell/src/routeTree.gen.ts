/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthCallbackRouteImport } from './routes/auth/callback'
import { Route as AppsAppIdRouteImport } from './routes/apps.$appId'
import { Route as AppsAppIdSplatRouteImport } from './routes/apps.$appId.$'

const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const AppsAppIdRoute = AppsAppIdRouteImport.update({
  id: '/apps/$appId',
  path: '/apps/$appId',
  getParentRoute: () => rootRouteImport,
} as any)
const AppsAppIdSplatRoute = AppsAppIdSplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => AppsAppIdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/apps/$appId': typeof AppsAppIdRouteWithChildren
  '/auth/callback': typeof AuthCallbackRoute
  '/apps/$appId/$': typeof AppsAppIdSplatRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/apps/$appId': typeof AppsAppIdRouteWithChildren
  '/auth/callback': typeof AuthCallbackRoute
  '/apps/$appId/$': typeof AppsAppIdSplatRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/apps/$appId': typeof AppsAppIdRouteWithChildren
  '/auth/callback': typeof AuthCallbackRoute
  '/apps/$appId/$': typeof AppsAppIdSplatRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sign-in'
    | '/apps/$appId'
    | '/auth/callback'
    | '/apps/$appId/$'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/sign-in' | '/apps/$appId' | '/auth/callback' | '/apps/$appId/$'
  id:
    | '__root__'
    | '/'
    | '/sign-in'
    | '/apps/$appId'
    | '/auth/callback'
    | '/apps/$appId/$'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SignInRoute: typeof SignInRoute
  AppsAppIdRoute: typeof AppsAppIdRouteWithChildren
  AuthCallbackRoute: typeof AuthCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/apps/$appId': {
      id: '/apps/$appId'
      path: '/apps/$appId'
      fullPath: '/apps/$appId'
      preLoaderRoute: typeof AppsAppIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/apps/$appId/$': {
      id: '/apps/$appId/$'
      path: '/$'
      fullPath: '/apps/$appId/$'
      preLoaderRoute: typeof AppsAppIdSplatRouteImport
      parentRoute: typeof AppsAppIdRoute
    }
  }
}

interface AppsAppIdRouteChildren {
  AppsAppIdSplatRoute: typeof AppsAppIdSplatRoute
}

const AppsAppIdRouteChildren: AppsAppIdRouteChildren = {
  AppsAppIdSplatRoute: AppsAppIdSplatRoute,
}

const AppsAppIdRouteWithChildren = AppsAppIdRoute._addFileChildren(
  AppsAppIdRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SignInRoute: SignInRoute,
  AppsAppIdRoute: AppsAppIdRouteWithChildren,
  AuthCallbackRoute: AuthCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
