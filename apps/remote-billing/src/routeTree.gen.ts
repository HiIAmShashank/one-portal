/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SubscriptionsRouteImport } from './routes/subscriptions'
import { Route as PaymentsRouteImport } from './routes/payments'
import { Route as InvoicesRouteImport } from './routes/invoices'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthCallbackRouteImport } from './routes/auth/callback'

const SubscriptionsRoute = SubscriptionsRouteImport.update({
  id: '/subscriptions',
  path: '/subscriptions',
  getParentRoute: () => rootRouteImport,
} as any)
const PaymentsRoute = PaymentsRouteImport.update({
  id: '/payments',
  path: '/payments',
  getParentRoute: () => rootRouteImport,
} as any)
const InvoicesRoute = InvoicesRouteImport.update({
  id: '/invoices',
  path: '/invoices',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/invoices': typeof InvoicesRoute
  '/payments': typeof PaymentsRoute
  '/subscriptions': typeof SubscriptionsRoute
  '/auth/callback': typeof AuthCallbackRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/invoices': typeof InvoicesRoute
  '/payments': typeof PaymentsRoute
  '/subscriptions': typeof SubscriptionsRoute
  '/auth/callback': typeof AuthCallbackRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/invoices': typeof InvoicesRoute
  '/payments': typeof PaymentsRoute
  '/subscriptions': typeof SubscriptionsRoute
  '/auth/callback': typeof AuthCallbackRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/invoices'
    | '/payments'
    | '/subscriptions'
    | '/auth/callback'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/invoices' | '/payments' | '/subscriptions' | '/auth/callback'
  id:
    | '__root__'
    | '/'
    | '/invoices'
    | '/payments'
    | '/subscriptions'
    | '/auth/callback'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  InvoicesRoute: typeof InvoicesRoute
  PaymentsRoute: typeof PaymentsRoute
  SubscriptionsRoute: typeof SubscriptionsRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/subscriptions': {
      id: '/subscriptions'
      path: '/subscriptions'
      fullPath: '/subscriptions'
      preLoaderRoute: typeof SubscriptionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/payments': {
      id: '/payments'
      path: '/payments'
      fullPath: '/payments'
      preLoaderRoute: typeof PaymentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/invoices': {
      id: '/invoices'
      path: '/invoices'
      fullPath: '/invoices'
      preLoaderRoute: typeof InvoicesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  InvoicesRoute: InvoicesRoute,
  PaymentsRoute: PaymentsRoute,
  SubscriptionsRoute: SubscriptionsRoute,
  AuthCallbackRoute: AuthCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
